(also check src/client/sdl/TODO)
Note that for each task there is a developer. If you want to work on any of
these tasks, ask that developer first, so you can agree on how to proceed.

TASKS FOR XPILOT NG 4.7.0
-------------------------

Task: Grab mouse pointer in X client when pressing mouse button.
Developer: kps

Task: Create a useful set of newbie messages that are shown to players
using the Add_newbie_message() function if client option 'newbie' is on.
Developer: kps

Task: Add support for Add_alert_message() in X client.
Developer: kps

Task: Make a newbie friendly default map where newbies can learn the very
basics of the game. The current idea is to make a conversion of new dark hell,
or a newbie version of the Dragon map.
Developer: throat / kps

Task: Add support for "self" type wormholes in server. In xml they look like
this:
<Wormhole x="260960" y="148960" type="self">
<Polygon ...></Polygon>
</Wormhole>
The x and y values in a self wormhole tell to what destination stuff will
be warped.
Developer: kps

Task: Make wormholes warp other objects than players.
Developer: kps

Task: Select a few new default options for server. Probably we could use
constantSpeed = 1 and afterburnerpower > 1 by default so that the ship
would move a bit faster in high fps games.
Developer: kps

Task: Select new defaults for client. There will be no kbd steering by
default. Players should learn to use the mouse at once. This requires
there to be a message that tells players that they should press mouse
button (or some other key (which?)) to activate mouse steering.
Developer: kps

Task: Sort out reported weirdness in quit mode and Mara's shield/multiple
key release bug fixes.
Developer: kps / virus

Task: Rewrite INSTALL.txt for ng. Especially describe SDL client compiling.
Developer: kps

Task: Cleanup teamcup.c of obsolete code (teamcup fork etc).
Developer: kps

Task: Add a way to be able to specify for each cannon/base what start items
(or more generally options) will be used for that cannon/base. Values of these
will override general map options where appropriate. Not all options
will be supported, only a small subset. An example cannon would look like this:

	<Cannon x="7467" y="283360" dir="0">
	<Option name="initiallasers" value="4"/>
	<Option name="initialemergencyshields" value="1"/>
	<Option name="cannonsmartness" value="3"/>
	<Polygon x="7467" y="283360" style="emptywhite">
	<Style state="destroyed" id="invisible"/>
	<Offset x="-747" y="1120"/>
	<Offset x="0" y="-2240"/>
	<Offset x="747" y="1120"/>
	</Polygon></Cannon>

An example base:

	<Base team="0" x="372960" y="269920" dir = "32">
	<Option name="initialmissiles" value="4"/>
	<Option name="initialmines" value="4"/>
	<Base/>

Note that this feature makes it possible to make Predators vs Marines style
maps where each team has a different set of start items, but also maps where
team members have different roles, e.g. fighters and bombers.
http://groups.google.ca/groups?hl=en&lr=&threadm=4iu3mg%2462t%40oban.cc.ic.ac.uk&rnum=1&prev=/groups%3Fq%3Dpredators%2Bxpilot%26hl%3Den%26lr%3D%26ie%3DUTF-8%26scoring%3Dr%26selm%3D4iu3mg%252462t%2540oban.cc.ic.ac.uk%26rnum%3D1
Developer: kps

Task: Make pause key unpause players also when baselesspausing option is on.
Developer: kps

Task: Make baselesspausing option work for non-teamplay maps.
Developer: kps

Task: Allow pausing and changing base for a slightly bigger area (maybe 3x3
blocks) around a base.
Developer: kps

Task: Make it so that if a team has a treasure, players get bases first that
are closer to the treasure.
Developer: kps

Task: Rename newsched to selectsched.
Developer: kps

Task: Make it so that no defaultsFile is used in server by default.
Developer: kps

Task: Write a "getting started" webpage for newbies.
Developer: kps

Task: Make ballrun counter work like in old xpilot when legacymode server
option is true.
Developer: kps

Task: Add an option to use old walls in Blood's Music games. This is useful
for comparing the bahaviour of the walls codes.
Developer: kps


SOME OTHER TASKS TODO FOR XPILOT NG
-----------------------------------

Task: Run net input in server at at least 50 Hz. This makes it so that there
is less networking stuff todo when the frame update is to be done which
reduces latency.
Developer: kps

Task: Make it so that server requests only very few (1) alarm signals
if no one is playing.
Developer: kps

Task: Implement compatibility mode for old clients (block protocol) in server,
when running a polygon map. For this task, one needs to make sure that the
number of map objects (e.g. fuel boxes) in the sent mapdata matches the number
on the map. Note that for checkpoints, some hack might be needed since an
xp2 map can have more than 26 checkpoints, which is the maximum on old maps.
Note also that server migth need to rearrange the map objects so that the old
clients see e.g. the bases in the right order. When this task is done, mapdata
option support can be removed from xp2 maps. Check file src/server/xpmap.c.
Developer: kps

Task: Change hit area of ships to match the default triangle shipshape. You
need to modify the analytical collision detection code in file
src/server/collision.c. More difficult task would be to write collision
detection code for an arbitrary, possibly a concave shape.
Developer: kps

Task: Make a "physically correct" replacement for the oldthrust hack. This
could possibly be done by adding an emergency thruster that would activate
when the ship has turned. Idea with this is that when ship has turned,
it is assumed the player tries to maneuver, and the emergency thruster
activates automatically. Reason that extra thruster can't be used all the time
is either that it would overheat or that it gets its energy from ship turns :)
Developer: kps

Task: Fix ship maneuverability so that fighting at high fps works as well
or rather better than it used to work on low fps. This should work on all maps,
not just on maps that have oldthrust option not equal to zero etc.
Developer: kps

Task: Server lag should be minimised, ideally so that when the time comes
to send the next frame to the clients, the frame could be sent at once,
or at least so that variance in time between frames is minimised. Possibly
send frame updates earliest to the players with the largest net lag
Developer: kps

Task: Make it so that server uses only 1 or 2 ports. Currently server uses
one contact port and one port per client. In case server is made to use only
one port, that would mean active clients would use that same port for
communication. If server is made to use 2 ports, the contact port would be
reserved for contact stuff and the other port for all clients.
Developer: kps

Task: Fix server recordings. The server recodings are not robust.
In a test game with 6 players, the replay of the recording only worked about
10 minutes. Thirdly, the recording should be put behind some interface so
that it doesn't mess up the code too much.
Developer: kps / uau ?

Task: Fix elimination race mode and clean up the race related code.
Developer: kps

Task: Make a new polygon based race map.
Developer: kps

Task: Write robot code that can control robots on a race map.
Developer: kps

Task: Rewrite robot navigation so that it isn't block based.
Developer: kps

Task: Rewrite smart missile navigation so that it isn't block based.
Developer: kps

Task: Find out if xpilot 4.5.4 has better ship steering than ng. Some
players have reported this. Possibly it is just because of "client lag".
Developer: kps

Task: Remove bottlenecks in server. This means using a profiler and trying
to find ways to speed up processing in places where the server uses a lot
of time.
Developer: kps

Task: Make it so that one can use -list command in client even if X is not
running.
Developer: kps

Task: Add code that handles the case when some map object reappears on top
of some object. This can happen for example when a destroyed cannon reappears.
Developer: kps

Task: Add support for more map objects in mapconvert.py. Also possibly add
a default texture file for these converted maps.
Developer: kps

Task: Improve audio support. Add support for "3D" sound where info about
the sound sources' positions and velocities are sent to clients so that
stuff like Doppler effect can be done. Note that there should be some
uncertainty (noise) in the positions and velocities so that this info can't
be used to make an automatic targetting system.
Developer: kps

Task: Improve newbie mode, for example automatically change scale factor
so that the whole visible area is seen if screen resolution is small.
Developer: kps

Task: Client side prediction, which could be used to reduce lag a bit, possibly
even allowing local style ship control.
Developer: kps

Task: Turn the item images on the hud in sdl client the right way (upside down
atm)

Task: Add support for MinGW/MSys build environment and making console 
server work under Windows
Developer: marvn

